base_dir: "/local/supabase" # Base directory for supabase
config_path: "{{ base_dir }}/configs" # Where config stored

docker_network: "supabase_net" # Docker network name

################################################
# CHANGE BELOW CREDENTIALS BEFOR GOING TO PROD #
################################################
supabase_dashboard_username: "test" # Supabase dashboard username login credentials
supabase_dashboard_password: "test" # Supabase dashboard password login credentials
supabase_anon_key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJhbm9uIiwKICAgICJpc3MiOiAic3VwYWJhc2UtZGVtbyIsCiAgICAiaWF0IjogMTY0MTc2OTIwMCwKICAgICJleHAiOiAxNzk5NTM1NjAwCn0.dc_X5iR_VP_qT0zsiyj_I_OZ2T9FtRU2BBNWN8Bu4GE" # JWT Token as Anonymous
supabase_service_role_key: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyAgCiAgICAicm9sZSI6ICJzZXJ2aWNlX3JvbGUiLAogICAgImlzcyI6ICJzdXBhYmFzZS1kZW1vIiwKICAgICJpYXQiOiAxNjQxNzY5MjAwLAogICAgImV4cCI6IDE3OTk1MzU2MDAKfQ.DaYlNEoUrrEn2Ig7tqibS-PHK5vgusbcbo7X36XVt4Q" # JWT Token as Service Role (Bypass RLS)
supabase_jwt_secret: "your-super-secret-jwt-token-with-at-least-32-characters-long" # JWT Secret for generating token

supabase_jwt_expiry: "3600" # JWT Expired time token
supabase_tenant_id: "tenant" # Supabase supavisor tenant (connection pool)
supabase_studio_organization: "Default" # Supabase studio organization name
supabase_studio_project: "Default" # Supabase studio project name

kong_http_port: "8000" # Kong http port
kong_https_port: "8443" # Kong https port

docker_socket_path: "/var/run/docker.sock"

smtp: # SMTP Credentials (use for auth)
  email: "admin@example.com"
  host: "supabase-mail"
  port: "2500"
  user: "fake_mail_user"
  password: "fake_mail_pass"
  name: "name"

postgres: # Postgres Credentials (TO DO: make it useable for external database)
  port: "5432"
  host: "postgres"
  password: "your-super-secret-and-long-postgres-password"
  db: "postgres"

services:
  - name: "{{ postgres.host }}"
    repository: supabase/postgres
    version: 15.8.1.060
    volumes:
      - "{{ config_path }}/db/realtime.sql:/docker-entrypoint-initdb.d/migrations/99-realtime.sql:Z"
      - "{{ config_path }}/db/webhooks.sql:/docker-entrypoint-initdb.d/init-scripts/98-webhooks.sql:Z"
      - "{{ config_path }}/db/roles.sql:/docker-entrypoint-initdb.d/init-scripts/99-roles.sql:Z"
      - "{{ config_path }}/db/jwt.sql:/docker-entrypoint-initdb.d/init-scripts/99-jwt.sql:Z"
      - "{{ config_path }}/db/data:/var/lib/postgresql/data:Z"
      - "{{ config_path }}/db/_supabase.sql:/docker-entrypoint-initdb.d/migrations/97-_supabase.sql:Z"
      - "{{ config_path }}/db/logs.sql:/docker-entrypoint-initdb.d/migrations/99-logs.sql:Z"
      - "{{ config_path }}/db/pooler.sql:/docker-entrypoint-initdb.d/migrations/99-pooler.sql:Z"
    env:
        POSTGRES_HOST: /var/run/postgresql
        PGPORT: "{{ postgres.port }}"
        POSTGRES_PORT: "{{ postgres.port }}"
        PGPASSWORD: "{{ postgres.password }}"
        POSTGRES_PASSWORD: "{{ postgres.password }}"
        PGDATABASE: "{{ postgres.db }}"
        POSTGRES_DB: "{{ postgres.db }}"
        JWT_SECRET: "{{ supabase_jwt_secret }}"
        JWT_EXP: "3600"

  - name: analytics
    repository: supabase/logflare
    version: 1.8.9
    ports:
      - 4000:4000
    env:
      LOGFLARE_NODE_HOST: "127.0.0.1"
      DB_USERNAME: "supabase_admin"
      DB_DATABASE: "_supabase"
      DB_HOSTNAME: "{{ postgres.host }}"
      DB_PORT: "{{ postgres.port }}"
      DB_PASSWORD: "{{ postgres.password }}"
      DB_SCHEMA: "_analytics"
      LOGFLARE_PUBLIC_ACCESS_TOKEN: "your-super-secret-and-long-logflare-key"
      LOGFLARE_SINGLE_TENANT: "true"
      LOGFLARE_SUPABASE_MODE: "true"
      LOGFLARE_MIN_CLUSTER_SIZE: "1"
      POSTGRES_BACKEND_URL: "postgresql://supabase_admin:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/_supabase"
      POSTGRES_BACKEND_SCHEMA: "_analytics"
      LOGFLARE_FEATURE_FLAG_OVERRIDE: "multibackend=true"

  - name: kong
    repository: kong
    version: 2.8.1
    ports:
      - "{{ kong_http_port }}:{{ kong_http_port }}/tcp"
      - "{{ kong_https_port }}:{{ kong_https_port }}/tcp"
    volumes:
      - "{{ config_path }}/kong/kong.yml:/home/kong/temp.yml"
    env:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /home/kong/temp.yml
      KONG_DNS_ORDER: LAST,A,CNAME
      KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth
      KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
      KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
      SUPABASE_ANON_KEY: "{{ supabase_anon_key }}"
      SUPABASE_SERVICE_KEY: "{{ supabase_service_role_key }}"
      DASHBOARD_USERNAME: "{{ supabase_dashboard_username }}"
      DASHBOARD_PASSWORD: "{{ supabase_dashboard_password }}"

  - name: supavisor
    repository: supabase/supavisor
    version: 2.5.1
    ports:
      - "{{ postgres.port }}:5432"
      - "6543:6543"
    volumes:
      - "{{ config_path }}/pooler/pooler.exs:/etc/pooler/pooler.exs:ro,z"
    env:
      PORT: "4000"
      POSTGRES_PORT: "{{ postgres.port }}"
      POSTGRES_DB: "{{ postgres.db }}"
      POSTGRES_HOST: "{{ postgres.host }}"
      POSTGRES_PASSWORD: "{{ postgres.password }}"
      DATABASE_URL: "ecto://supabase_admin:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/_supabase"
      CLUSTER_POSTGRES: "true"
      SECRET_KEY_BASE: "pNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq"
      VAULT_ENC_KEY: "your-encryption-key-32-chars-min"
      API_JWT_SECRET: "{{ supabase_jwt_secret }}"
      METRICS_JWT_SECRET: "{{ supabase_jwt_secret }}"
      REGION: "local"
      ERL_AFLAGS: "-proto_dist inet_tcp"
      POOLER_TENANT_ID: "{{ supabase_tenant_id }}"
      POOLER_DEFAULT_POOL_SIZE: "20"
      POOLER_MAX_CLIENT_CONN: "100"
      POOLER_POOL_MODE: "transaction"
    command:
      - "/bin/sh"
      - "-c"
      - "/app/bin/migrate && /app/bin/supavisor eval \"File.read!('/etc/pooler/pooler.exs') |> Code.eval_string\" && /app/bin/server"

  - name: studio
    repository: supabase/studio
    version: 2025.05.19-sha-3487831
    env:
        STUDIO_PG_META_URL: "http://meta:8080"
        POSTGRES_PASSWORD: "{{ postgres.password }}"
        DEFAULT_ORGANIZATION_NAME: "{{ supabase_studio_organization }}"
        DEFAULT_PROJECT_NAME: "{{ supabase_studio_project }}"
        SUPABASE_URL: "http://kong:{{ kong_http_port }}"
        SUPABASE_ANON_KEY: "{{ supabase_anon_key }}"
        SUPABASE_SERVICE_KEY: "{{ supabase_service_role_key }}"
        AUTH_JWT_SECRET: "{{ supabase_jwt_secret }}"
        LOGFLARE_URL: "http://analytics:4000"
        LOGFLARE_PUBLIC_ACCESS_TOKEN: "your-super-secret-and-long-logflare-key"
        LOGFLARE_API_KEY: "your-super-secret-and-long-logflare-key"
        NEXT_PUBLIC_ENABLE_LOGS: "true"
        NEXT_ANALYTICS_BACKEND_PROVIDER: "postgres"

  - name: meta
    repository: supabase/postgres-meta
    version: v0.89.0
    env:
      PG_META_PORT: "8080"
      PG_META_DB_HOST: "{{ postgres.host }}"
      PG_META_DB_PORT: "{{ postgres.port }}"
      PG_META_DB_NAME: "{{ postgres.db }}"
      PG_META_DB_USER: "supabase_admin"
      PG_META_DB_PASSWORD: "{{ postgres.password }}"

  - name: auth
    repository: supabase/gotrue
    version: v2.172.1
    env:
      GOTRUE_API_HOST: "0.0.0.0"
      GOTRUE_API_PORT: "9999"
      API_EXTERNAL_URL: "http://localhost:{{ kong_http_port }}"

      GOTRUE_DB_DRIVER: "postgres"
      GOTRUE_DB_DATABASE_URL: "postgres://supabase_auth_admin:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/{{ postgres.db }}"

      GOTRUE_SITE_URL: "http://localhost:3000"
      GOTRUE_URI_ALLOW_LIST: ""
      GOTRUE_DISABLE_SIGNUP: "false"

      GOTRUE_JWT_ADMIN_ROLES: "service_role"
      GOTRUE_JWT_AUD: "authenticated"
      GOTRUE_JWT_DEFAULT_GROUP_NAME: "authenticated"
      GOTRUE_JWT_EXP: "3600"
      GOTRUE_JWT_SECRET: "{{ supabase_jwt_secret }}"

      GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: "false"
      GOTRUE_MAILER_AUTOCONFIRM: "true"

      GOTRUE_SMTP_ADMIN_EMAIL: "{{ smtp.email }}"
      GOTRUE_SMTP_HOST: "{{ smtp.host }}"
      GOTRUE_SMTP_PORT: "{{ smtp.port }}"
      GOTRUE_SMTP_USER: "{{ smtp.user }}"
      GOTRUE_SMTP_PASS: "{{ smtp.password }}"
      GOTRUE_SMTP_SENDER_NAME: "{{ smtp.name }}"
      GOTRUE_MAILER_URLPATHS_INVITE: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_RECOVERY: "/auth/v1/verify"
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "/auth/v1/verify"

      GOTRUE_EXTERNAL_PHONE_ENABLED: "false"
      GOTRUE_SMS_AUTOCONFIRM: "false"

  - name: rest
    repository: postgrest/postgrest
    version: v12.2.12
    env:
      PGRST_DB_URI: "postgres://authenticator:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/{{ postgres.db }}"
      PGRST_DB_SCHEMAS: "public,storage,graphql_public"
      PGRST_DB_ANON_ROLE: "anon"
      PGRST_JWT_SECRET: "{{ supabase_jwt_secret }}"
      PGRST_DB_USE_LEGACY_GUCS: "false"
      PGRST_APP_SETTINGS_JWT_SECRET: "{{ supabase_jwt_secret }}"
      PGRST_APP_SETTINGS_JWT_EXP: "{{ supabase_jwt_expiry }}"
    command:
      - "postgrest"

  - name: imgproxy
    repository: darthsim/imgproxy
    version: v3.8.0
    volumes:
      - "{{ config_path }}/storage:/var/lib/storage:z"
    env:
      IMGPROXY_BIND: ":5001"
      IMGPROXY_LOCAL_FILESYSTEM_ROOT: "/"
      IMGPROXY_USE_ETAG: "true"
      IMGPROXY_ENABLE_WEBP_DETECTION: "true"

  - name: storage
    repository: supabase/storage-api
    version: v1.22.17
    volumes:
      - "{{ config_path }}/storage:/var/lib/storage:z"
    env:
      ANON_KEY: "{{ supabase_anon_key }}"
      SERVICE_KEY: "{{ supabase_service_role_key }}"
      POSTGREST_URL: "http://rest:3000"
      PGRST_JWT_SECRET: "{{ supabase_jwt_secret }}"
      DATABASE_URL: "postgres://supabase_storage_admin:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/{{ postgres.db }}"
      FILE_SIZE_LIMIT: "52428800"
      STORAGE_BACKEND: "file"
      FILE_STORAGE_BACKEND_PATH: "/var/lib/storage"
      TENANT_ID: "stub"
      REGION: "stub"
      GLOBAL_S3_BUCKET: "stub"
      ENABLE_IMAGE_TRANSFORMATION: "true"
      IMGPROXY_URL: "http://imgproxy:5001"

  - name: realtime
    repository: supabase/realtime
    version: v2.34.47
    env:
      PORT: "4000"
      DB_HOST: "{{ postgres.host }}"
      DB_PORT: "{{ postgres.port }}"
      DB_USER: "supabase_admin"
      DB_PASSWORD: "{{ postgres.password }}"
      DB_NAME: "{{ postgres.db }}"
      DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
      DB_ENC_KEY: "supabaserealtime"
      API_JWT_SECRET: "{{ supabase_jwt_secret }}"
      SECRET_KEY_BASE: "pNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq"
      ERL_AFLAGS: "-proto_dist inet_tcp"
      DNS_NODES: "''"
      RLIMIT_NOFILE: "10000"
      APP_NAME: "realtime"
      SEED_SELF_HOST: "true"
      RUN_JANITOR: "true"


  - name: functions
    repository: supabase/edge-runtime
    version: v1.67.4
    volumes:
      - "{{ config_path }}/functions:/home/deno/functions:Z"
    env:
      JWT_SECRET: "{{ supabase_jwt_secret }}"
      SUPABASE_URL: "http://kong:{{ kong_http_port }}"
      SUPABASE_ANON_KEY: "{{ supabase_anon_key }}"
      SUPABASE_SERVICE_ROLE_KEY: "{{ supabase_service_role_key }}"
      SUPABASE_DB_URL: "postgresql://postgres:{{ postgres.password }}@{{ postgres.host }}:{{ postgres.port }}/{{ postgres.db }}"
      VERIFY_JWT: "false"
    command:
      - "start"
      - "--main-service"
      - "/home/deno/functions/main"

  - name: vector
    repository: timberio/vector
    version: 0.28.1-alpine
    volumes:
      - "{{ config_path }}/logs/vector.yml:/etc/vector/vector.yml:ro,z"
      - "{{ docker_socket_path }}:/var/run/docker.sock:ro,z"
    env:
      LOGFLARE_API_KEY: "your-super-secret-and-long-logflare-key"
    command:
      - "--config"
      - "/etc/vector/vector.yml"